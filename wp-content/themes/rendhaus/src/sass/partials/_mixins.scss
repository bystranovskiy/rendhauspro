// =============================================================================
// Flex align
// =============================================================================
@mixin flex-align($justify, $align) {
  display: flex;
  justify-content: $justify;
  align-items: $align;
}

// =============================================================================
// Full cover
// =============================================================================
@mixin full-cover {
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
}

// =============================================================================
// Animate header
// =============================================================================
@mixin animate-header {
  .animate-header span {
    animation: letter-fade-in 0.7s 0s ease both;
    will-change: opacity;
    position: relative;

    @for $i from 1 through 100 {
      &:nth-child(#{$i}) {
        animation-delay: .04s*$i;
      }
    }

  }
}

// =============================================================================
// String Replace
// =============================================================================
@function str-replace($string, $search, $replace: "") {
  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }

  @return $string;
}

// =============================================================================
// Font Face
// =============================================================================
@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff ttf svg) {
  $src: null;

  $extmods: (
          eot: "?",
          svg: "#" + str-replace($name, " ", "_")
  );

  $formats: (
          otf: "opentype",
          ttf: "truetype"
  );

  @each $ext in $exts {
    $extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);
    $format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
    $src: append($src, url(quote($path + "." + $extmod)) format(quote($format)), comma);
  }

  @font-face {
    font-display: swap;
    font-family: quote($name);
    font-style: $style;
    font-weight: $weight;
    src: $src;
  }
}

@mixin button-hover {
  i {
    width: 0;
    margin: 0;
    transition: width .44s 0s, height 0s .44s, top 0s .44s;
  }

  & > span {
    transform: translateX(0);
    &:before {
      width: 100%;
      transition: .1s .0s;
    }
    &:after {
      height: 100%;
      transition: .1s .1s;
    }
    span {
      &:before {
        width: 100%;
        transition: .1s .2s;
      }
      &:after {
        height: 100%;
        transition: .1s .3s;
      }
    }
  }

  &.reverse {
    & > span {
      &:before {
        width: 100%;
        height: 1px;
      }
      &:after {
        width: 1px;
        height: 100%;
      }
      & > span {
        &:before {
          width: 100%;
          height: 1px;
        }
        &:after {
          width: 1px;
          height: 100%;
        }
      }
    }
  }

  &.align-center {
    margin-right: 0;
    transform: translateX(0);
  }

}